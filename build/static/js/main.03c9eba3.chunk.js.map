{"version":3,"sources":["components/Header.js","containers/Header.js","components/ThemeSwitch.js","containers/ThemeSwitch.js","containers/Content.js","index.js"],"names":["Header","react_default","a","createElement","style","color","this","props","themeColor","Component","connect","state","ThemeSwitch","onSwitchColor","onClick","handleSwitchColor","bind","dispatch","type","Content","containers_ThemeSwitch","store","createStore","action","Object","objectSpread","Index","containers_Header","containers_Content","ReactDOM","render","es","src_Index","document","getElementById"],"mappings":"+OAGqBA,mLAMjB,OACEC,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAAEC,MAAOC,KAAKC,MAAMC,aAA/B,gCAP8BC,aCKrBC,cALS,SAACC,GACvB,MAAO,CACLH,WAAYG,EAAMH,aAGPE,CAAyBV,GCLnBY,4LAKCP,GACXC,KAAKC,MAAMM,eACVP,KAAKC,MAAMM,cAAcR,oCAI7B,OACIJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UACAC,MAAO,CAACC,MAAMC,KAAKC,MAAMC,YACzBM,QAASR,KAAKS,kBAAkBC,KAAKV,KAAK,QAF1C,OAKAL,EAAAC,EAAAC,cAAA,UACAC,MAAO,CAACC,MAAMC,KAAKC,MAAMC,YACzBM,QAASR,KAAKS,kBAAkBC,KAAKV,KAAK,SAF1C,gBAlByBG,aCa1BC,cAbS,SAACC,GACrB,MAAO,CACHH,WAAWG,EAAMH,aAGA,SAACS,GACtB,MAAO,CACHJ,cAAc,SAACR,GACXY,EAAS,CAACC,KAAK,eAAeV,WAAWH,OAKtCK,CAA4CE,GCXrDO,mLAME,OACIlB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGC,MAAO,CAACC,MAAMC,KAAKC,MAAMC,aAA5B,oCAEAP,EAAAC,EAAAC,cAACiB,EAAD,eAVMX,aAuBPC,cANS,SAACC,GACrB,MAAO,CACHH,WAAWG,EAAMH,aAIVE,CAAyBS,WCPhCE,SAAQC,YAZO,SAACX,EAAOY,GAC3B,IAAKZ,EAAO,MAAO,CACjBH,WAAY,OAEd,OAAQe,EAAOL,MACb,IAAK,eACH,OAAOM,OAAAC,EAAA,EAAAD,CAAA,GAAKb,EAAZ,CAAmBH,WAAYe,EAAOf,aACxC,QACE,OAAOG,MAMPe,mLAEF,OACEzB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwB,EAAD,MACA1B,EAAAC,EAAAC,cAACyB,EAAD,cALYnB,aAWtBoB,IAASC,OACP7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAUV,MAAOA,GACjBpB,EAAAC,EAAAC,cAAC6B,EAAD,OAEAC,SAASC,eAAe","file":"static/js/main.03c9eba3.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class Header extends Component {\r\n  static propTypes = {\r\n    themeColor: PropTypes.string\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <h1 style={{ color: this.props.themeColor }}>React.js 小书</h1>\r\n    )\r\n  }\r\n}","import { connect } from 'react-redux'\r\nimport Header from '../components/Header'\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    themeColor: state.themeColor\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Header)","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class ThemeSwitch extends Component {\r\n    static propTypes = {\r\n        themeColor:PropTypes.string,\r\n        onSwitchColor:PropTypes.func\r\n    }\r\n    handleSwitchColor(color){\r\n        if(this.props.onSwitchColor){\r\n            this.props.onSwitchColor(color)\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <button\r\n                style={{color:this.props.themeColor}}\r\n                onClick={this.handleSwitchColor.bind(this,'red')}\r\n                >Red\r\n                </button>\r\n                <button\r\n                style={{color:this.props.themeColor}}\r\n                onClick={this.handleSwitchColor.bind(this,'blue')}                \r\n                >Blue\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}","import { connect } from 'react-redux'\r\nimport ThemeSwitch from '../components/ThemeSwitch'\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        themeColor:state.themeColor\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        onSwitchColor:(color)=>{\r\n            dispatch({type:'CHANGE_COLOR',themeColor:color})\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ThemeSwitch)","import React,{ Component } from \"react\"\r\nimport PropTypes from 'prop-types'\r\nimport ThemeSwitch from './ThemeSwitch'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Content extends Component{\r\n    static propTypes = {\r\n        themeColor:PropTypes.string\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <p style={{color:this.props.themeColor}}>\r\n                React.js 小书内容\r\n                <ThemeSwitch />\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        themeColor:state.themeColor\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Content)","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport Header from './containers/Header'\nimport Content from './containers/Content'\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport './index.css'\n\n  \n  const themeReducer = (state, action) => {\n    if (!state) return {\n      themeColor: 'red'\n    }\n    switch (action.type) {\n      case 'CHANGE_COLOR':\n        return { ...state, themeColor: action.themeColor }\n      default:\n        return state\n    }\n  }\n  \n  const store = createStore(themeReducer)\n\n  class Index extends Component {\n    render () {\n      return (\n        <div>\n          <Header />\n          <Content />\n        </div>\n      )\n    }\n  }\n\nReactDOM.render(\n  <Provider store={store}>\n  <Index />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}